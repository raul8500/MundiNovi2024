export type NodeFormData = any;
export declare let NodeFormData: NodeFormData;
export type UniversalFormData = FormData | InstanceType<any>;
export declare const createWrapper: (apiKey: string, apiVersion?: 'v1' | 'v2') => {
    request(url: string, options?: {
        params?: Record<string, any> | null;
        body?: any;
        formData?: UniversalFormData;
        method?: string;
    }): Promise<any>;
    get(url: string, options?: {
        params?: Record<string, any> | null;
    }): Promise<any>;
    post(url: string, options?: {
        body?: any;
        formData?: UniversalFormData;
        params?: Record<string, any> | null;
    }): Promise<any>;
    put(url: string, options?: {
        body?: any;
        formData?: UniversalFormData;
        params?: Record<string, any> | null;
    }): Promise<any>;
    delete(url: string, options?: {
        params?: Record<string, any> | null;
    }): Promise<any>;
};
export type WrapperClient = ReturnType<typeof createWrapper>;
